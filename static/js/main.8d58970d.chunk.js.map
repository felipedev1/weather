{"version":3,"sources":["components/WeatherNow/WeatherNow.js","components/Forecast/Forecast.js","App.js","index.js"],"names":["WeatherNow","city","icon","text","value","isDayTime","metric","className","Math","floor","src","alt","width","Forecast","temperatureMax","temperatureMin","dateForecast","date","Date","getDay","getDate","style","color","apiKey","App","useState","setCity","cityKey","setCityKey","weather","setWeather","forecasts","setForecasts","setMetric","e","a","preventDefault","config","params","apikey","q","axios","get","then","res","localStorage","setItem","data","Key","catch","err","console","log","useEffect","getItem","urlWeather","language","getWeatherNow","urlForecast","DailyForecasts","getForecast","onSubmit","getWeather","type","placeholder","onChange","target","name","id","checked","htmlFor","WeatherIcon","WeatherText","Temperature","Metric","Value","Imperial","IsDayTime","map","forecast","index","key","Maximum","Minimum","Day","Icon","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAIe,SAASA,EAAT,GAAqE,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,UAAWC,EAAU,EAAVA,OACvE,OACE,yBAAKC,UAAS,sBAAiBF,EAAY,SAAW,aACpD,wBAAIE,UAAU,QAAQN,GACtB,yBAAKM,UAAU,mBACb,8BACGC,KAAKC,MAAML,GADd,OACuBE,GAEvB,yBAAKC,UAAU,aACb,yBAAKG,IAAG,gEAA2DR,EAAO,GAAP,WAAgBA,GAASA,EAApF,UACNS,IAAI,QAAQC,MAAM,QACpB,2BAAIT,O,MCZC,SAASU,EAAT,GAAmF,IAA/DC,EAA8D,EAA9DA,eAAgBC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,aAAcd,EAAgB,EAAhBA,KAAMI,EAAU,EAAVA,OAQrF,OACE,yBAAKC,UAAU,YACb,4BARJ,WACE,IAAMU,EAAO,IAAIC,KAAKF,GAEtB,MADe,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAC5CC,EAAKE,UAAY,IAAMF,EAAKG,UAMrCD,IAEH,6BACA,uBAAGE,MAAO,CAACC,MAAM,WAAjB,QAAkCd,KAAKC,MAAMK,GAA7C,OAA+DR,EAA/D,KACA,uBAAGe,MAAO,CAACC,MAAM,SAAjB,QAAgCd,KAAKC,MAAMM,GAA3C,OAA6DT,EAA7D,MACA,yBAAKI,IAAG,gEAA2DR,EAAO,GAAP,WAAgBA,GAASA,EAApF,UACNS,IAAI,QAAQC,MAAM,QCR1B,IAAMW,EAAS,mCAGA,SAASC,IAAO,IAAD,EAEJC,mBAAS,IAFL,mBAErBxB,EAFqB,KAEfyB,EAFe,OAGED,qBAHF,mBAGrBE,EAHqB,KAGZC,EAHY,OAIEH,qBAJF,mBAIrBI,EAJqB,KAIZC,EAJY,OAKML,qBALN,mBAKrBM,EALqB,KAKVC,EALU,OAMAP,mBAAS,KANT,mBAMrBnB,EANqB,KAMb2B,EANa,iDAiB5B,WAA0BC,GAA1B,eAAAC,EAAA,sDACED,EAAEE,iBADJ,iEAGQC,EAAS,CACbC,OAAQ,CACNC,OAAQhB,EACRiB,EAAGvC,IAGPwC,IAAMC,IATR,iEASuBL,GAClBM,MAAK,SAAAC,GACJC,aAAaC,QAAQ,WAAY7C,GACjC4C,aAAaC,QAAQ,UAAWF,EAAIG,KAAK,GAAGC,KAC5CpB,EAAWgB,EAAIG,KAAK,GAAGC,QAExBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAf9B,4CAjB4B,sBAgF5B,OAxEAG,qBAAU,WACRzB,EAAWiB,aAAaS,QAAQ,YAChC5B,EAAQmB,aAAaS,QAAQ,aACzB3B,IAwBN,WACE,IAAM4B,EAAU,mEAA+D5B,GACzEU,EAAS,CACbC,OAAQ,CACNC,OAAQhB,EACRiC,SA1CS,UA6Cbf,IAAMC,IAAIa,EAAYlB,GACnBM,MAAK,SAAAC,GAAG,OAAId,EAAWc,EAAIG,KAAK,OAChCE,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAjC1BO,GAoCJ,WACE,IAAMC,EAAW,sEAAkE/B,GAC7EU,EAAS,CACbC,OAAQ,CACNC,OAAQhB,EACRiC,SAvDS,QAwDTlD,QAAQ,IAGZmC,IAAMC,IAAIgB,EAAarB,GACpBM,MAAK,SAAAC,GAAG,OAAIZ,EAAaY,EAAIG,KAAKY,mBAClCV,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MA9C1BU,MAED,CAACjC,IAkEF,yBAAKpB,UAAU,OAEb,yBAAKA,UAAU,aACb,0BAAMsD,SAAU,SAAC3B,GAAD,OApFM,2CAoFC4B,CAAW5B,KAChC,yBAAK3B,UAAU,cACb,2BAAOwD,KAAK,OACVxD,UAAU,eACVyD,YAAY,sBACZC,SAAU,SAAA/B,GAAC,OAAIR,EAAQQ,EAAEgC,OAAO9D,WAEpC,4BAAQG,UAAU,kBAAkBwD,KAAK,UAAzC,0CAIF,yBAAKxD,UAAU,mBACb,yBAAKA,UAAU,cACb,2BAAOA,UAAU,mBAAmBwD,KAAK,QAAQI,KAAK,SAASC,GAAG,UAAUhE,MAAM,IAChFiE,QAAoB,MAAX/D,EACT2D,SAAU,SAAC/B,GAAD,OAAOD,EAAUC,EAAEgC,OAAO9D,UACtC,2BAAOG,UAAU,mBAAmB+D,QAAQ,WAA5C,YAIF,yBAAK/D,UAAU,cACb,2BAAOA,UAAU,mBAAmBwD,KAAK,QAAQI,KAAK,SAASC,GAAG,aAAahE,MAAM,IACnFiE,QAAoB,MAAX/D,EACT2D,SAAU,SAAC/B,GAAD,OAAOD,EAAUC,EAAEgC,OAAO9D,UACtC,2BAAOG,UAAU,mBAAmB+D,QAAQ,cAA5C,iBAOLzC,GACC,kBAAC,EAAD,CAAY3B,KAAM2B,EAAQ0C,YACxBpE,KAAM0B,EAAQ2C,YACdpE,MAAkB,MAAXE,EAAiBuB,EAAQ4C,YAAYC,OAAOC,MACjD9C,EAAQ4C,YAAYG,SAASD,MAC/BrE,OAAQA,EACRD,UAAWwB,EAAQgD,UACnB5E,KAAM4C,aAAaS,QAAQ,cAG/B,yBAAK/C,UAAU,aACZwB,GA7DEA,EAAU+C,KAAI,SAACC,EAAUC,GAAX,OACnB,kBAAC,EAAD,CAAUC,IAAKD,EACblE,eAA2B,MAAXR,EAAiByE,EAASN,YAAYS,QAAQP,MACtB,EAArCI,EAASN,YAAYS,QAAQP,MAAU,EAAK,GAC/C5D,eAA2B,MAAXT,EAAiByE,EAASN,YAAYU,QAAQR,MACtB,EAArCI,EAASN,YAAYU,QAAQR,MAAU,EAAK,GAC/CrE,OAAQA,EACRU,aAAc+D,EAAS7D,KACvBhB,KAAM6E,EAASK,IAAIC,YCnF3BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8d58970d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './WeatherNow.css'\r\n\r\n\r\nexport default function WeatherNow({ city, icon, text, value, isDayTime, metric }) {\r\n  return (\r\n    <div className={`weather-now ${isDayTime ? 'bg-day' : 'bg-night'}`}>\r\n      <h2 className=\"city\">{city}</h2>\r\n      <div className=\"weather-content\">\r\n        <span >\r\n          {Math.floor(value)}°{metric}\r\n        </span>\r\n        <div className=\"ml-3 info\">\r\n          <img src={`https://developer.accuweather.com/sites/default/files/${icon < 10 ? `0${icon}` : icon}-s.png`}\r\n            alt=\"Tempo\" width=\"150\" />\r\n          <p>{text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './Forecast.css'\r\n\r\nexport default function Forecast({ temperatureMax, temperatureMin, dateForecast, icon, metric }) {\r\n\r\n  function getDay() {\r\n    const date = new Date(dateForecast)\r\n    const semana = ['DOM', 'SEG', 'TER', 'QUA', 'QUI', 'SEX', 'SAB']\r\n    return semana[date.getDay()] + '-' + date.getDate()\r\n  }\r\n\r\n  return (\r\n    <div className=\"card-day\">\r\n      <h4>\r\n        {getDay()}\r\n      </h4>\r\n      <hr />\r\n      <p style={{color:\"tomato\"}}>Max: {Math.floor(temperatureMax)}°{metric} </p>\r\n      <p style={{color:\"blue\"}}>Min: {Math.floor(temperatureMin)}°{metric}  </p>\r\n      <img src={`https://developer.accuweather.com/sites/default/files/${icon < 10 ? `0${icon}` : icon}-s.png`}\r\n        alt=\"Tempo\" width=\"80\" />\r\n    </div>\r\n  )\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport axios from 'axios'\nimport React from 'react';\nimport { useState, useEffect } from 'react'\nimport './App.css';\nimport WeatherNow from './components/WeatherNow/WeatherNow'\nimport Forecast from './components//Forecast/Forecast'\n\n\n// API URL: https://developer.accuweather.com/apis\n\n\nconst apiKey = 'PW3UZcSOAxeKcNm58tMzXGDufhOMFqox'\nconst language = 'pt-BR'\n\nexport default function App() {\n\n  const [city, setCity] = useState('')\n  const [cityKey, setCityKey] = useState()\n  const [weather, setWeather] = useState()\n  const [forecasts, setForecasts] = useState()\n  const [metric, setMetric] = useState('C')\n\n  useEffect(() => {\n    setCityKey(localStorage.getItem(\"cityKey\"))\n    setCity(localStorage.getItem(\"cityName\"))\n    if (cityKey) {\n      getWeatherNow()\n      getForecast()\n    }\n  }, [cityKey])\n\n  async function getWeather(e) {\n    e.preventDefault()\n    const urlLocale = `https://dataservice.accuweather.com/locations/v1/cities/search`\n    const config = {\n      params: {\n        apikey: apiKey,\n        q: city\n      }\n    }\n    axios.get(urlLocale, config)\n      .then(res => {\n        localStorage.setItem(\"cityName\", city)\n        localStorage.setItem(\"cityKey\", res.data[0].Key)\n        setCityKey(res.data[0].Key)\n      })\n      .catch(err => console.log(err))\n  }\n\n  function getWeatherNow() {\n    const urlWeather = `https://dataservice.accuweather.com/currentconditions/v1/${cityKey}`\n    const config = {\n      params: {\n        apikey: apiKey,\n        language: language\n      }\n    }\n    axios.get(urlWeather, config)\n      .then(res => setWeather(res.data[0]))\n      .catch(err => console.log(err))\n  }\n\n  function getForecast() {\n    const urlForecast = `https://dataservice.accuweather.com/forecasts/v1/daily/5day/${cityKey}`\n    const config = {\n      params: {\n        apikey: apiKey,\n        language: language,\n        metric: true\n      }\n    }\n    axios.get(urlForecast, config)\n      .then(res => setForecasts(res.data.DailyForecasts))\n      .catch(err => console.log(err))\n  }\n\n\n  function showForecasts() {\n\n    return forecasts.map((forecast, index) =>\n      <Forecast key={index}\n        temperatureMax={metric === \"C\" ? forecast.Temperature.Maximum.Value :\n          (forecast.Temperature.Maximum.Value * 9/5) + 32 }\n        temperatureMin={metric === \"C\" ? forecast.Temperature.Minimum.Value :\n          (forecast.Temperature.Minimum.Value * 9/5) + 32 }\n        metric={metric}\n        dateForecast={forecast.Date}\n        icon={forecast.Day.Icon}\n      />\n    );\n  }\n\n\n\n  return (\n    <div className='App'>\n\n      <div className=\"city-form\">\n        <form onSubmit={(e) => getWeather(e)}>\n          <div className=\"form-group\">\n            <input type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Informe a cidade...\"\n              onChange={e => setCity(e.target.value)} />\n          </div>\n          <button className=\"btn btn-primary\" type=\"submit\">\n            Clique para ver o tempo na sua cidade\n            </button>\n        </form>\n        <div className=\"form-group ml-3\">\n          <div className=\"form-check\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"metric\" id=\"celcius\" value=\"C\" \n              checked={metric === 'C'} \n              onChange={(e) => setMetric(e.target.value)} />\n            <label className=\"form-check-label\" htmlFor=\"celcius\">\n              Celcius\n            </label>\n          </div>\n          <div className=\"form-check\">\n            <input className=\"form-check-input\" type=\"radio\" name=\"metric\" id=\"fahrenheit\" value=\"F\"\n              checked={metric === 'F'}\n              onChange={(e) => setMetric(e.target.value)} />\n            <label className=\"form-check-label\" htmlFor=\"fahrenheit\">\n              Fahrenheit\n            </label>\n          </div>\n        </div>\n\n      </div>\n      {weather &&\n        <WeatherNow icon={weather.WeatherIcon}\n          text={weather.WeatherText}\n          value={metric === 'C' ? weather.Temperature.Metric.Value : \n            weather.Temperature.Imperial.Value  }\n          metric={metric}\n          isDayTime={weather.IsDayTime}\n          city={localStorage.getItem(\"cityName\")} >\n        </WeatherNow>\n      }\n      <div className=\"forecasts\">\n        {forecasts && showForecasts()}\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}